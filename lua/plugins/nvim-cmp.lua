return {}
-- return {
--   "hrsh7th/nvim-cmp",
--   opts = function(_, opts)
--     local cmp = require("cmp")
--     local compare = require("cmp.config.compare")
--     opts.sorting.comparators = {
--       -- compare.score_offset, -- not good at all
--       compare.length, -- useless
--       compare.locality,
--       compare.recently_used,
--       compare.score, -- based on :  score = score + ((#sources - (source_index - 1)) * sorting.priority_weight)
--       compare.offset,
--       compare.order,
--       -- compare.scopes, -- what?
--       -- compare.sort_text,
--       -- compare.exact,
--       -- compare.kind,
--     }
--     opts.mapping = cmp.mapping.preset.insert({
--       ["<C-b>"] = cmp.mapping.scroll_docs(-4),
--       ["<C-f>"] = cmp.mapping.scroll_docs(4),
--       ["<C-n>"] = cmp.mapping.select_next_item({ behavior = cmp.SelectBehavior.Insert }),
--       ["<C-p>"] = cmp.mapping.select_prev_item({ behavior = cmp.SelectBehavior.Insert }),
--       ["<C-j>"] = cmp.mapping.complete(),
--       ["<C-Space>"] = cmp.mapping.complete(),
--       ["<C-y>"] = LazyVim.cmp.confirm({ select = true }),
--       ["<C-e"] = cmp.mapping.abort(),
--       -- ["<CR>"] = LazyVim.cmp.confirm({ select = true }),
--       -- ["<S-CR>"] = LazyVim.cmp.confirm({ behavior = cmp.ConfirmBehavior.Replace }), -- Accept currently selected item. Set `select` to `false` to only confirm explicitly selected items.
--       -- ["<C-CR>"] = function(fallback)
--       --   cmp.abort()
--       --   fallback()
--       -- end,
--       -- ["<tab>"] = function(fallback)
--       --   return LazyVim.cmp.map({ "snippet_forward", "ai_accept" }, fallback)()
--       -- end,
--
--       ["<tab>"] = function(fallback)
--         if cmp.visible() then
--           cmp.confirm({ select = true })
--         elseif require("luasnip").locally_jumpable(1) then
--           return LazyVim.cmp.map({ "snippet_forward" })()
--         else
--           return LazyVim.cmp.map({ "ai_accept" }, fallback)()
--         end
--       end,
--
--       ["<S-tab>"] = function(fallback)
--         return LazyVim.cmp.map({ "snippet_backward" }, fallback)()
--       end,
--
--       ["<CR>"] = function(fallback)
--         return LazyVim.cmp.map({ "ai_accept" }, fallback)()
--       end,
--     })
--   end,
-- }
